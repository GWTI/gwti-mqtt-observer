{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "CsvToJsonLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gwti-mqtt-observer-development-csvToJson"
      }
    },
    "ObserverMHandlerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gwti-mqtt-observer-development-observerMHandler"
      }
    },
    "ForkEyDataToEyStreamLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gwti-mqtt-observer-development-forkEyDataToEyStream"
      }
    },
    "SendObserverDataLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gwti-mqtt-observer-development-sendObserverData"
      }
    },
    "CsvToJsonLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "mqtt-obs-sls-eu-west-2-development-470851704113",
          "S3Key": "serverless/gwti-mqtt-observer/development/1741119757157-2025-03-04T20:22:37.157Z/csvToJson.zip"
        },
        "Handler": "src/csvToJson.lambda_handler",
        "Runtime": "python3.9",
        "FunctionName": "gwti-mqtt-observer-development-csvToJson",
        "MemorySize": 1024,
        "Timeout": 300,
        "Environment": {
          "Variables": {
            "OBSERVER_DATA_TABLE_NAME": "gwti-mqtt-observer-development-RawObserverDataTable",
            "SEND_TO_TARGET_SERVER_QUEUE": "https://sqs.eu-west-2.amazonaws.com/470851704113/gwti-mqtt-observer-development-sendToTargetServer.fifo",
            "DEVKEY_CACHE_TABLE_NAME": "gwti-mqtt-observer-development-DevKeyCache",
            "EY_FORK_MQTT_TOPIC": "ey/observer/development"
          }
        },
        "Role": "arn:aws:iam::470851704113:role/gwti-mqtt-observer-development-ProcessObserverRole"
      },
      "DependsOn": [
        "CsvToJsonLogGroup"
      ]
    },
    "ObserverMHandlerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "mqtt-obs-sls-eu-west-2-development-470851704113",
          "S3Key": "serverless/gwti-mqtt-observer/development/1741119757157-2025-03-04T20:22:37.157Z/observerMHandler.zip"
        },
        "Handler": "src/observer_m_no_process.lambda_handler",
        "Runtime": "python3.9",
        "FunctionName": "gwti-mqtt-observer-development-observerMHandler",
        "MemorySize": 1024,
        "Timeout": 300,
        "Environment": {
          "Variables": {
            "OBSERVER_DATA_TABLE_NAME": "gwti-mqtt-observer-development-RawObserverDataTable",
            "SEND_TO_TARGET_SERVER_QUEUE": "https://sqs.eu-west-2.amazonaws.com/470851704113/gwti-mqtt-observer-development-sendToTargetServer.fifo",
            "DEVKEY_CACHE_TABLE_NAME": "gwti-mqtt-observer-development-DevKeyCache",
            "EY_FORK_MQTT_TOPIC": "ey/observer/development"
          }
        },
        "Role": "arn:aws:iam::470851704113:role/gwti-mqtt-observer-development-ProcessObserverRole"
      },
      "DependsOn": [
        "ObserverMHandlerLogGroup"
      ]
    },
    "ForkEyDataToEyStreamLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "mqtt-obs-sls-eu-west-2-development-470851704113",
          "S3Key": "serverless/gwti-mqtt-observer/development/1741119757157-2025-03-04T20:22:37.157Z/forkEyDataToEyStream.zip"
        },
        "Handler": "src/forkEyDataToEyStream.lambda_handler",
        "Runtime": "python3.9",
        "FunctionName": "gwti-mqtt-observer-development-forkEyDataToEyStream",
        "MemorySize": 1024,
        "Timeout": 300,
        "Environment": {
          "Variables": {
            "OBSERVER_DATA_TABLE_NAME": "gwti-mqtt-observer-development-RawObserverDataTable",
            "SEND_TO_TARGET_SERVER_QUEUE": "https://sqs.eu-west-2.amazonaws.com/470851704113/gwti-mqtt-observer-development-sendToTargetServer.fifo",
            "DEVKEY_CACHE_TABLE_NAME": "gwti-mqtt-observer-development-DevKeyCache",
            "EY_FORK_MQTT_TOPIC": "ey/observer/development"
          }
        },
        "Role": "arn:aws:iam::470851704113:role/gwti-mqtt-observer-development-ForkEyObserverDataRole"
      },
      "DependsOn": [
        "ForkEyDataToEyStreamLogGroup"
      ]
    },
    "SendObserverDataLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "mqtt-obs-sls-eu-west-2-development-470851704113",
          "S3Key": "serverless/gwti-mqtt-observer/development/1741119757157-2025-03-04T20:22:37.157Z/sendObserverData.zip"
        },
        "Handler": "src/sendObserverData.lambda_handler",
        "Runtime": "python3.9",
        "FunctionName": "gwti-mqtt-observer-development-sendObserverData",
        "MemorySize": 1024,
        "Timeout": 60,
        "Environment": {
          "Variables": {
            "OBSERVER_DATA_TABLE_NAME": "gwti-mqtt-observer-development-RawObserverDataTable",
            "SEND_TO_TARGET_SERVER_QUEUE": "https://sqs.eu-west-2.amazonaws.com/470851704113/gwti-mqtt-observer-development-sendToTargetServer.fifo",
            "DEVKEY_CACHE_TABLE_NAME": "gwti-mqtt-observer-development-DevKeyCache",
            "EY_FORK_MQTT_TOPIC": "ey/observer/development"
          }
        },
        "Role": "arn:aws:iam::470851704113:role/gwti-mqtt-observer-development-SendObserverDataRole"
      },
      "DependsOn": [
        "SendObserverDataLogGroup"
      ]
    },
    "ForkEyDataToEyStreamLambdaVersion6q6vq4pfDJoGinSaCpsEoqcpVr0nk2fnojNfD4D8b8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ForkEyDataToEyStreamLambdaFunction"
        },
        "CodeSha256": "90TYczhz84rfdV1XNgVtZFLY8i9fEl1pRkEdX4WlVzc="
      }
    },
    "CsvToJsonLambdaVersionxmEeaYOKDkTsHUU2Jvagtpp678qGV9WaaFTqxy8AmE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CsvToJsonLambdaFunction"
        },
        "CodeSha256": "90TYczhz84rfdV1XNgVtZFLY8i9fEl1pRkEdX4WlVzc="
      }
    },
    "SendObserverDataLambdaVersionny6XxlH3e3O6TpNslq0JPsOaLl6XiH51wNzGLMmcatI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SendObserverDataLambdaFunction"
        },
        "CodeSha256": "90TYczhz84rfdV1XNgVtZFLY8i9fEl1pRkEdX4WlVzc="
      }
    },
    "ObserverMHandlerLambdaVersionmLJ09Nu2XsglbHD4Ema1PT9VycnjcM6UHvYzU7GTI4M": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ObserverMHandlerLambdaFunction"
        },
        "CodeSha256": "90TYczhz84rfdV1XNgVtZFLY8i9fEl1pRkEdX4WlVzc="
      }
    },
    "CsvToJsonIotTopicRule1": {
      "Type": "AWS::IoT::TopicRule",
      "Properties": {
        "TopicRulePayload": {
          "RuleDisabled": false,
          "Sql": "SELECT * FROM 'observer/development/#'",
          "Actions": [
            {
              "Lambda": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "CsvToJsonLambdaFunction",
                    "Arn"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "CsvToJsonLambdaPermissionIotTopicRule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CsvToJsonLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "iot.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":iot:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":rule/",
              {
                "Ref": "CsvToJsonIotTopicRule1"
              }
            ]
          ]
        }
      }
    },
    "CsvToJsonIotTopicRule2": {
      "Type": "AWS::IoT::TopicRule",
      "Properties": {
        "TopicRulePayload": {
          "RuleDisabled": false,
          "Sql": "SELECT * FROM 'ey/observer/development/#'",
          "Actions": [
            {
              "Lambda": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "CsvToJsonLambdaFunction",
                    "Arn"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "CsvToJsonLambdaPermissionIotTopicRule2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CsvToJsonLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "iot.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":iot:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":rule/",
              {
                "Ref": "CsvToJsonIotTopicRule2"
              }
            ]
          ]
        }
      }
    },
    "ObserverMHandlerIotTopicRule1": {
      "Type": "AWS::IoT::TopicRule",
      "Properties": {
        "TopicRulePayload": {
          "RuleDisabled": false,
          "Sql": "SELECT * FROM 'observer-m/development/#'",
          "Actions": [
            {
              "Lambda": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "ObserverMHandlerLambdaFunction",
                    "Arn"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "ObserverMHandlerLambdaPermissionIotTopicRule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ObserverMHandlerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "iot.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":iot:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":rule/",
              {
                "Ref": "ObserverMHandlerIotTopicRule1"
              }
            ]
          ]
        }
      }
    },
    "ForkEyDataToEyStreamIotTopicRule1": {
      "Type": "AWS::IoT::TopicRule",
      "Properties": {
        "TopicRulePayload": {
          "RuleDisabled": false,
          "Sql": "SELECT * FROM 'ey/observer/development/#'",
          "Actions": [
            {
              "Lambda": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "ForkEyDataToEyStreamLambdaFunction",
                    "Arn"
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "ForkEyDataToEyStreamLambdaPermissionIotTopicRule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ForkEyDataToEyStreamLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "iot.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":iot:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":rule/",
              {
                "Ref": "ForkEyDataToEyStreamIotTopicRule1"
              }
            ]
          ]
        }
      }
    },
    "SendObserverDataEventSourceMappingSQSGwtimqttobserverdevelopmentsendToTargetServerfifo": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [],
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": "arn:aws:sqs:eu-west-2:470851704113:gwti-mqtt-observer-development-sendToTargetServer.fifo",
        "FunctionName": {
          "Fn::GetAtt": [
            "SendObserverDataLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "mqtt-obs-sls-eu-west-2-development-470851704113",
      "Export": {
        "Name": "sls-gwti-mqtt-observer-development-ServerlessDeploymentBucketName"
      }
    },
    "ForkEyDataToEyStreamLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ForkEyDataToEyStreamLambdaVersion6q6vq4pfDJoGinSaCpsEoqcpVr0nk2fnojNfD4D8b8"
      },
      "Export": {
        "Name": "sls-gwti-mqtt-observer-development-ForkEyDataToEyStreamLambdaFunctionQualifiedArn"
      }
    },
    "CsvToJsonLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CsvToJsonLambdaVersionxmEeaYOKDkTsHUU2Jvagtpp678qGV9WaaFTqxy8AmE"
      },
      "Export": {
        "Name": "sls-gwti-mqtt-observer-development-CsvToJsonLambdaFunctionQualifiedArn"
      }
    },
    "SendObserverDataLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SendObserverDataLambdaVersionny6XxlH3e3O6TpNslq0JPsOaLl6XiH51wNzGLMmcatI"
      },
      "Export": {
        "Name": "sls-gwti-mqtt-observer-development-SendObserverDataLambdaFunctionQualifiedArn"
      }
    },
    "ObserverMHandlerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ObserverMHandlerLambdaVersionmLJ09Nu2XsglbHD4Ema1PT9VycnjcM6UHvYzU7GTI4M"
      },
      "Export": {
        "Name": "sls-gwti-mqtt-observer-development-ObserverMHandlerLambdaFunctionQualifiedArn"
      }
    }
  }
}